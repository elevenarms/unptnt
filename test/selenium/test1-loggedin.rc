require "selenium"
require "test/unit"

class NewTest < Test::Unit::TestCase
  def setup
    @verification_errors = []
    if $selenium
      @selenium = $selenium
    else
      @selenium = Selenium::SeleniumDriver.new("localhost", 4444, "*chrome", "http://change-this-to-the-site-you-are-testing/", 10000);
      @selenium.start
    end
    @selenium.set_context("test_new")
  end
  
  def teardown
    @selenium.stop unless $selenium
    assert_equal [], @verification_errors
  end
  
  def test_new
    @selenium.open "/"
    begin
        assert @selenium.is_element_present("link=projects")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("//div[@id='topmenu']/ul/li[2]/a/strong")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("link=login")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("link=signup")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("//div[@id='logo']/img")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("//div[@id='logo']/img")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("//img[@alt='Newprojectbutton']")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "link=login"
    @selenium.wait_for_page_to_load "30000"
    begin
        assert @selenium.is_text_present("Brownell Chalstrom")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("//img[@alt='Brownell-small']")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("link=Next Â»")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("link=6")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "//img[@alt='Newprojectbutton']"
    @selenium.wait_for_page_to_load "30000"
    @selenium.type "project_name", "Silenium test"
    begin
        assert @selenium.is_text_present("")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "link=cancel"
    @selenium.wait_for_page_to_load "30000"
    begin
        assert @selenium.is_element_present("//div[@id='header-bottom']/div[1]/h3/strong")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "//img[@alt='Newprojectbutton']"
    @selenium.wait_for_page_to_load "30000"
    @selenium.type "project_name", "Silenium project"
    @selenium.click "project_submit"
    @selenium.wait_for_page_to_load "30000"
    begin
        assert @selenium.is_text_present("Silenium project")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("//img[@alt='Edit']")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("//img[@alt='By_sa']")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "//img[@alt='Edit']"
    begin
        assert @selenium.is_text_present("Project image")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_text_present("Project image\n \n or cancel")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("link=cancel")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "link=cancel"
    begin
        assert @selenium.is_element_present("//img[@alt='Edit']")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "//img[@alt='Edit']"
    @selenium.type "project_project_image", "/home/brownell/Pictures/MPGuino photos/intro.jpg"
    @selenium.click "project_submit"
    begin
        assert @selenium.is_element_present("//img[@alt='Intro']")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("//img[@alt='Status_history']")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_text_present("exact:Status: Created")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_text_present("exact:License: Creative Commons Attribution Share Alike (by-sa)")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "link=edit"
    @selenium.type "project_status", "newstatus"
    @selenium.click "project_submit"
    begin
        assert @selenium.is_text_present("exact:Status: newstatus")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "//img[@alt='Status_history']"
    begin
        assert @selenium.is_text_present("Created (at 2008-12-16 22:47:34 UTC )")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_text_present("newstatus (at 2008-12-16 22:54:33 UTC )")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "link=Back to project"
  end
end
