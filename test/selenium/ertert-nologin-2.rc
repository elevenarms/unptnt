require "selenium"
require "test/unit"

class NewTest < Test::Unit::TestCase
  def setup
    @verification_errors = []
    if $selenium
      @selenium = $selenium
    else
      @selenium = Selenium::SeleniumDriver.new("localhost", 4444, "*chrome", "http://change-this-to-the-site-you-are-testing/", 10000);
      @selenium.start
    end
    @selenium.set_context("test_new")
  end
  
  def teardown
    @selenium.stop unless $selenium
    assert_equal [], @verification_errors
  end
  
  def test_new
    @selenium.open "/projects/3"
    assert_equal "ertert", @selenium.get_title
    begin
        assert @selenium.is_element_present("//img[@alt='Status_history']")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_text_present("dfghdfgh")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "link=materials"
    @selenium.wait_for_page_to_load "30000"
    assert_equal "ertert", @selenium.get_title
    begin
        assert @selenium.is_element_present("//tr[@id='item_21']/td[3]")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("link=show")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    @selenium.click "link=show"
    assert_equal "ertert", @selenium.get_title
    begin
        assert @selenium.is_text_present("exact:Quantity: 3\n Item type: Software\n Item name: asdf\n URL for Item info:")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("//div[@id='image-image']/p/img")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_text_present("wwerwerw")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
    begin
        assert @selenium.is_element_present("link=Item discussion forum")
    rescue Test::Unit::AssertionFailedError
        @verification_errors << $!
    end
  end
end
